{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2025-01-02T17:30:32.300Z",
    "end": "2025-01-02T17:31:09.873Z",
    "duration": 37573,
    "testsRegistered": 4,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b21384a8-8a87-49f4-b49f-e4c6c6322f2f",
      "title": "",
      "fullFile": "cypress\\e2e\\markAsDelivered.cy.js",
      "file": "cypress\\e2e\\markAsDelivered.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e05d6cc0-93bf-4da1-b110-1234dfc11d9d",
          "title": "Mark as delivered Successfully",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Admin can mark as delivered successfully",
              "fullTitle": "Mark as delivered Successfully Admin can mark as delivered successfully",
              "timedOut": null,
              "duration": 12413,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@listOrderID\").then(ids => {\n  let id = ids.valid[1].orderID; //order is paid, and not deliverd\n  _orderHistoryPage.orderHistoryPage.clickViewOrderDetail(id);\n  cy.wait(500);\n  _orderDetailPage.orderDetailPage.isOrderPaid().isOrderNotDelivered().clickMarkAsDelivered().isOrderDelivered();\n  cy.wait(500);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<div.fade.alert.alert-success.show>' to contain 'Not Delivered'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div.fade.alert.alert-success.show>' to contain 'Not Delivered'\n    at Object.isOrderNotDelivered (webpack://e2e_automationtest/./cypress/pages/orderDetailPage.js:48:72)\n    at Context.eval (webpack://e2e_automationtest/./cypress/e2e/markAsDelivered.cy.js:36:17)",
                "diff": null
              },
              "uuid": "cf0bb0cb-352d-42d8-be19-8c7828973783",
              "parentUUID": "e05d6cc0-93bf-4da1-b110-1234dfc11d9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cf0bb0cb-352d-42d8-be19-8c7828973783"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e4efa011-b0bd-4116-ac84-262a247e0d33",
          "title": "Can not mark as delivered",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "For an order is Not Paid",
              "fullTitle": "Can not mark as delivered For an order is Not Paid",
              "timedOut": null,
              "duration": 8575,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@accounts\").then(accounts => {\n  let account = accounts.admin;\n  _navBar.navBar.clickSignIn();\n  cy.wait(500);\n  _loginPage.loginPage.inputSignIn(account.email, account.password).clickLogin();\n  cy.wait(500);\n});\n_navBar.navBar.clickAdminMenu().clickOrders();\ncy.wait(3000);\ncy.get(\"@listOrderID\").then(ids => {\n  let id = ids.valid[2].orderID; //order is not paid\n  _orderHistoryPage.orderHistoryPage.clickViewOrderDetail(id);\n  cy.wait(500);\n  _orderDetailPage.orderDetailPage.isOrderNotPaid().isOrderNotDelivered().isBtnMarkAsDeliverdDisappeared();\n  cy.wait(500);\n});",
              "err": {},
              "uuid": "b1f2c626-e2d5-4482-a4ad-27c375706efc",
              "parentUUID": "e4efa011-b0bd-4116-ac84-262a247e0d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "For an order that has already been delivered",
              "fullTitle": "Can not mark as delivered For an order that has already been delivered",
              "timedOut": null,
              "duration": 8199,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@accounts\").then(accounts => {\n  let account = accounts.admin;\n  _navBar.navBar.clickSignIn();\n  cy.wait(500);\n  _loginPage.loginPage.inputSignIn(account.email, account.password).clickLogin();\n  cy.wait(500);\n});\n_navBar.navBar.clickAdminMenu().clickOrders();\ncy.wait(3000);\ncy.get(\"@listOrderID\").then(ids => {\n  let id = ids.valid[0].orderID; //order has been delivered\n  _orderHistoryPage.orderHistoryPage.clickViewOrderDetail(id);\n  cy.wait(500);\n  _orderDetailPage.orderDetailPage.isOrderDelivered().isBtnMarkAsDeliverdDisappeared();\n  cy.wait(500);\n});",
              "err": {},
              "uuid": "607bac47-5265-475d-9b22-4927a6dfab7f",
              "parentUUID": "e4efa011-b0bd-4116-ac84-262a247e0d33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Customer can not mark as delivered",
              "fullTitle": "Can not mark as delivered Customer can not mark as delivered",
              "timedOut": null,
              "duration": 8062,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@accounts\").then(accounts => {\n  let account = accounts.valid;\n  _navBar.navBar.clickSignIn();\n  cy.wait(500);\n  _loginPage.loginPage.inputSignIn(account.email, account.password).clickLogin();\n  cy.wait(500);\n});\n//go to user profile -> order detail\n_navBar.navBar.clickNavDropDown().clickUserProfile();\ncy.wait(3000);\ncy.get(\"@listOrderID\").then(ids => {\n  let id = ids.valid[3].orderID; //order is paid, and not deliverd\n  _orderHistoryPage.orderHistoryPage.clickViewOrderDetail(id);\n  cy.wait(500);\n  _orderDetailPage.orderDetailPage.isOrderPaid().isOrderNotDelivered().isBtnMarkAsDeliverdDisappeared();\n  cy.wait(500);\n});",
              "err": {},
              "uuid": "ae37d354-3bb8-4551-9fab-334e26aecaed",
              "parentUUID": "e4efa011-b0bd-4116-ac84-262a247e0d33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1f2c626-e2d5-4482-a4ad-27c375706efc",
            "607bac47-5265-475d-9b22-4927a6dfab7f",
            "ae37d354-3bb8-4551-9fab-334e26aecaed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24836,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}