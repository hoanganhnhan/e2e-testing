{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 0,
    "pending": 0,
    "failures": 2,
    "start": "2025-01-02T17:32:09.999Z",
    "end": "2025-01-02T17:32:19.447Z",
    "duration": 9448,
    "testsRegistered": 8,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "12e5cee2-50f3-448f-8fbf-89daed3613af",
      "title": "",
      "fullFile": "cypress\\e2e\\signup.cy.js",
      "file": "cypress\\e2e\\signup.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4caea606-3bf2-4549-acde-c722ee1896f7",
          "title": "Sign up successfully",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sign Up with valid account",
              "fullTitle": "Sign up successfully Sign Up with valid account",
              "timedOut": null,
              "duration": 4920,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@data\").then(data => {\n  _signupPage.signupPage.inputSignUp(data.valid.name, data.valid.email, data.valid.password, data.valid.confirmPassword).clickSignUp();\n  _navBar.navBar.isUserNameCorrect(data.valid.name);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Create your account' within the element: <a> but never did.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Sign up successfully`",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Create your account' within the element: <a> but never did.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Sign up successfully`\n    at Object.clickSignUp (webpack://e2e_automationtest/./cypress/pages/loginPage.js:33:20)\n    at Context.eval (webpack://e2e_automationtest/./cypress/e2e/signup.cy.js:10:18)",
                "diff": null
              },
              "uuid": "14c52fd4-48a9-4fbc-bfde-ae9a3e0217c3",
              "parentUUID": "4caea606-3bf2-4549-acde-c722ee1896f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "14c52fd4-48a9-4fbc-bfde-ae9a3e0217c3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8dc3e90-0710-4e70-bd47-8114efedf749",
          "title": "Can not Sign Up with invalid account",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Empty field",
              "fullTitle": "Can not Sign Up with invalid account Empty field",
              "timedOut": null,
              "duration": 4422,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Create your account' within the element: <a> but never did.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Can not Sign Up with invali...`",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Create your account' within the element: <a> but never did.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Can not Sign Up with invali...`\n    at Object.clickSignUp (webpack://e2e_automationtest/./cypress/pages/loginPage.js:33:20)\n    at Context.eval (webpack://e2e_automationtest/./cypress/e2e/signup.cy.js:30:18)",
                "diff": null
              },
              "uuid": "8943b38a-da81-46e4-92e0-3c678abcfc93",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Existed Email",
              "fullTitle": "Can not Sign Up with invalid account Existed Email",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {},
              "uuid": "55e56bb8-60ee-4692-aadd-3711ac1985fc",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Invalid Email: missing @",
              "fullTitle": "Can not Sign Up with invalid account Invalid Email: missing @",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {},
              "uuid": "d7955e43-4332-46a1-88fb-6e3d590f5634",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Invalid Email: missing .com",
              "fullTitle": "Can not Sign Up with invalid account Invalid Email: missing .com",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {},
              "uuid": "cb55281a-1c21-4235-a9e3-b52aaa5670ed",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Invalid Email: missing path",
              "fullTitle": "Can not Sign Up with invalid account Invalid Email: missing path",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {},
              "uuid": "1c61c3e7-0466-4477-a819-4426ffa32b4c",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Invalid password: not have required length",
              "fullTitle": "Can not Sign Up with invalid account Invalid password: not have required length",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {},
              "uuid": "9b2c5b3e-b544-404d-b4f0-f4dfe75af12b",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Password does not match Confirm Password",
              "fullTitle": "Can not Sign Up with invalid account Password does not match Confirm Password",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_signupPage.signupPage.inputSignUp(data.name, data.email, data.password, data.confirmPassword).clickSignUp();\nif (data.error.errorField == \"toastify\") {\n  _signupPage.signupPage.isNotificationCorrect(data.error.errorMessage).clickCloseToastifyButton();\n} else {\n  _signupPage.signupPage.checkErrorMessage(data.error.errorMessage, data.error.errorField);\n}",
              "err": {},
              "uuid": "466fee38-4dde-48f8-91b8-e3ad40653052",
              "parentUUID": "b8dc3e90-0710-4e70-bd47-8114efedf749",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8943b38a-da81-46e4-92e0-3c678abcfc93"
          ],
          "pending": [],
          "skipped": [
            "55e56bb8-60ee-4692-aadd-3711ac1985fc",
            "d7955e43-4332-46a1-88fb-6e3d590f5634",
            "cb55281a-1c21-4235-a9e3-b52aaa5670ed",
            "1c61c3e7-0466-4477-a819-4426ffa32b4c",
            "9b2c5b3e-b544-404d-b4f0-f4dfe75af12b",
            "466fee38-4dde-48f8-91b8-e3ad40653052"
          ],
          "duration": 4422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}